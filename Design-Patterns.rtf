{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh17520\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs48 \cf0 Design-Patterns-Pick\

\b0 \

\b\fs36 Factory-Pattern:\

\b0 \
Wenn man eine Oberklasse hat, mit mehreren Sub-Klassen, und\
je nach Situation (\'84Input\'93) will man eine bestimmte Sub-Klasse erlangen.\
Die Factory-Klasse kann ein Singelton sein.\
\
\

\b Builder-Pattern:\

\b0 \
Wenn man viele optionale Parameter f\'fcr ein Objekt hat\
Wenn man ein Objekt Schritt f\'fcr Schritt bauen will\
\
\

\b Template-Method-Pattern:\

\b0 \
Oberklasse h\'e4lt Template-Methoden, die erst von den Sub-Klassen genauer definiert, bzw \'fcberschrieben werden.\
Die Template-Methode kann auch eine Default-Methode sein.\
\
\

\b Stratagy-Pattern:\

\b0 \
Wenn es verschiedene Algorithmen f\'fcr dasselbe Task gibt, und der Client zur Runtime entscheiden kann, welcher genutzt werden soll.\
\
\

\b State-Pattern:\

\b0 \
Wenn ein Objekt sein Verhalten \'e4ndern soll, je nach Status (zb Rasse bei Night-Fight)\
\
\

\b Visitor-Pattern:\

\b0 \
Wenn man eine Gruppe \'e4hnlicher Objekte hat, und Funktionen auslagern will.\
Zb: Shoppen, Waren in den Warenkorb legen, dann Kauf best\'e4tigen. Mit Visitor-Pattern kann die Rechnung f\'fcr den Preis ausgelagert werden, anstatt in den einzelnen Waren implementiert zu sein.\
\
\

\b Iterator-Pattern:\

\b0 \
Wird verwendet, um \'fcber eine Gruppe von Objekten zu iterieren\
\
\
Factory\
State\
Stratagy\
Iterator}